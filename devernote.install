<?php
/**
 * @file
 * Provides installation functions.
 */

/**
 * Implements hook_schema().
 */
function devernote_schema() {

  $schema['devernote_notes'] = array(
    'description' => 'Relationship of evernote note id to drupal node nid.',
    'fields' => array(
      'note_guid' => array(
        'description' => 'The unique guid of the evernote note.',
        'type' => 'varchar',
        'length' => '250',
        'not null' => TRUE,
        'default' => '0',
      ),
      'nid' => array(
        'description' => 'The {node}.nid of the node created from the note.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => '0',
      ),
      'uid' => array(
        'description' => 'The {users}.uid of the user creating the note.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => '0',
      ),
    ),
    'primary key' => array('note_guid'),
    'indexes' => array(
      'note_guid' => array('note_guid'),
      'nid' => array('nid'),
    ),
  );

  $schema['devernote_user'] = array(
    'description' => 'User specific data.',
    'fields' => array(
      'uid' => array(
        'description' => 'The {users}.uid of the user creating the note.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'oauth_token' => array(
        'description' => 'The oauth token provided by evernote.',
        'type' => 'varchar',
        'length' => '250',
        'not null' => TRUE,
        'default' => '0',
      ),
      'notestoreurl' => array(
        'description' => 'The notestoreurl provided by evernote.',
        'type' => 'varchar',
        'length' => '250',
        'not null' => TRUE,
        'default' => '',
      ),
      'expires' => array(
        'description' => 'Unix timestamp for when the oauth_token expires.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updates' => array(
        'description' => 'The number of evernote updates for the user.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'tag' => array(
        'description' => 'The Evernote tag used for flagging imports.',
        'type' => 'varchar',
        'length' => '50',
        'not null' => TRUE,
        'default' => '',
      ),
      'tag_guid' => array(
        'description' => 'guid of the Evernote tag used for flagging imports.',
        'type' => 'varchar',
        'length' => '250',
        'not null' => TRUE,
        'default' => '0',
      ),
      'secret_key' => array(
        'description' => 'Secret key provided by Evernote to access api.',
        'type' => 'varchar',
        'length' => '250',
        'not null' => TRUE,
        'default' => 0,
      ),
      'consumer_key' => array(
        'description' => 'Consumer key provided by Evernote to access api.',
        'type' => 'varchar',
        'length' => '250',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('uid'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );

  return $schema;
}

/**
 * New columns in {devernote_user} : secret_key, consumer_key
 */
function devernote_update_7000() {

  $spec = array(
    'description' => 'Secret key provided by Evernote to access api.',
    'type' => 'varchar',
    'length' => '250',
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field( 'devernote_user', 'secret_key', $spec);

  $spec = array(
    'description' => 'Consumer key provided by Evernote to access api.',
    'type' => 'varchar',
    'length' => '250',
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field( 'devernote_user', 'consumer_key', $spec);

  variable_del('devernote_consumer_key');
  variable_del('devernote_secret_key');

  drupal_set_message('Please tell all users to re-enter their consumer and secret keys.', 'warning');
}


/**
 * Implements hook_uninstall().
 */
function devernote_uninstall() {

  variable_del('devernote_enc_method');
  variable_del('devernote_nodestatus');
  variable_del('devernote_nodepromoted');
  variable_del('devernote_nodecomments');
  variable_del('devernote_inputformat');
  variable_del('devernote_imagestyle');
  variable_del('devernote_div2p');
  variable_del('devernote_convertheadings');
}
